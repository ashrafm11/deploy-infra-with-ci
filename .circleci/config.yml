version: 2.1
   
# commands:
#   destroy_environment:
#     # docker:
#     #   - image: amazon/aws-cli
#     steps:
#        - run:
#           #  name: Destroy environment
#            # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
#            # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
#            command: |
#              aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}
#            when: on_fail
jobs:
  create_and_deploy_front_end:
    docker:
      - image: amazon/aws-cli
    steps:
      -  checkout
      - run:
          name: Execute bucket.yml - Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
            --template-file bucket.yml \
            --region us-east-1 \
            --stack-name stack-create-bucket-${CIRCLE_WORKFLOW_ID:0:7} \
            --parameter-overrides MyBucketName="mybucket-${CIRCLE_WORKFLOW_ID:0:7}"
  promote_to_production:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Execute cloudfront.yml
          command: |
            aws cloudformation deploy \
            --template-file cloudfront.yml \
            --stack-name production-distro \
            --parameter-overrides PipelineID="mybucket-${CIRCLE_WORKFLOW_ID:0:7}"
  get_last_deployment_id:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: yum install -y tar gzip
      - run:
          name: Fetch and save the old pipeline ID (bucket name) responsible for the last release.
          command: |
            aws cloudformation \
            list-exports --query "Exports[?Name==\`PipelineID\`].Value" \
            --no-paginate --output text > ~/textfile.txt
      - persist_to_workspace:
          root: ~/
          paths: 
            - textfile.txt         
      # Uncomment the step below if yoou wish to upload all contents of the current directory to the S3 bucket
      - run: aws s3 sync . s3://mybucket-${CIRCLE_WORKFLOW_ID:0:7} --delete
  clean_up_old_front_end:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: yum install -y tar gzip
      - attach_workspace:
          at: ~/
      - run:
          name: Destroy the previous S3 bucket and CloudFormation stack. 
          # Use $OldBucketID environment variable or mybucket644752792305 below.
          # Similarly, you can create and use $OldStackID environment variable in place of production-distro 
          command: |
            export OldBucketID=$(cat ~/textfile.txt)
            aws s3 rm "s3://${OldBucketID}" --recursive
  #  create_infrastructure: 
  #     docker:
  #       - image: amazon/aws-cli
  #     steps:
  #       - checkout
  #       - run:
  #           name: Create Cloudformation Stack
  #           command: |
  #               aws cloudformation deploy \
  #               --template-file infra.yml \
  #               --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} \
  #               --region us-east-1
  #               --parameter-overrides NAME="${CIRCLE_WORKFLOW_ID}"
  #       - run: aws s3 sync . s3://"${CIRCLE_WORKFLOW_ID}" --delete
  #  configure_infrastructure: 
  #     docker:
  #       - image: python:3.7-alpine3.11
  #     steps:
  #       - checkout
  #       - add_ssh_keys:
  #               fingerprints: ["ca:c5:ff:cf:cf:2c:9d:53:74:ee:8d:40:fb:33:30:91"] 
  #       - run:
  #           name: Install Ansible
  #           command: |
  #             apk add --update ansible
  #             ansible-playbook -i host mplay.yml
  #       - run:
  #           name: Run Playbook and Configure server
  #           command: |
  #             ansible-playbook -i host mplay.yml
  #  smoke_test:
  #   docker:
  #     - image: amazon/aws-cli
  #   steps:
  #     - run:
  #         name: Test job
  #         # Fail the job intentionally to simulate an error.
  #         command:  return 1
  #     - destroy_environment   
# commands:
#    destroy_environment:
#      steps:
#        - run:
#            name: Destroy environment
#            # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
#            # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
#            when: on_fail
#            command: |
#             aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} --region us-east-1 --parameter-overrides NAME="${CIRCLE_WORKFLOW_ID}"

workflows:
  # Name the workflow
  myWorkflow:
    jobs:
      # - create_infrastructure
      # - configure_infrastructure:
      #      requires: 
      #       - create_infrastructure
      # - smoke_test:
      #     requires:
      #       - configure_infrastructure
      - create_and_deploy_front_end 
      - promote_to_production:
          requires:
            - create_and_deploy_front_end
      - get_last_deployment_id:
         requires:
           - promote_to_production
      - clean_up_old_front_end:
          requires:
            - create_and_deploy_front_end
            - promote_to_production
      # - destroy_environment:
      #     requires:
      #       - smoke_test
